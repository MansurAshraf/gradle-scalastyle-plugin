/*
 * Copyright 2013. Muhammad Ashraf
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
apply plugin: "java"
apply plugin: "scala"
apply plugin: "groovy"
apply plugin: "maven"
apply plugin: 'signing' // For pushing to Sonatype OSS Staging repository

version = '0.3'
group = "org.github.mansur.scalastyle"

repositories {
    mavenCentral()
}


configurations {
    deployerJars
}


ext {
    cloudbees = [:]
}
cloudbees += [
        user_name: "$System.env.cb_username",
        password: "$System.env.cb_password"
]


dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.scalastyle:scalastyle_2.10:0.3.2'
    compile 'org.scala-lang:scala-library:2.10'
    compile 'commons-lang:commons-lang:2.6'
    testCompile 'junit:junit:4.11'
    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'

}

compileGroovy.dependsOn(compileScala)

// Required for Sonatype
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
    extension "jar"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier "javadoc"
    extension "jar"
}

configurations.create("sources")
configurations.create("javadoc")
configurations.archives {
    extendsFrom configurations.sources
    extendsFrom configurations.javadoc
}

artifacts {
    sources(sourcesJar) {
        type "jar"
    }
    javadoc(javadocJar) {
        type "javadoc"
    }
}

javadoc.doFirst { println "" }

// Required for Sonatype
//signing {
//    sign configurations.archives
//}

uploadArchives {
    repositories {


        repositories.mavenDeployer {
            def configureAuth = {
                authentication(userName: cloudbees.user_name, password: cloudbees.password)
            }
            configuration = configurations.deployerJars
            repository(url: "dav:https://repository-uncommon-configuration.forge.cloudbees.com/release/", configureAuth)
            snapshotRepository(url: "dav:https://repository-uncommon-configuration.forge.cloudbees.com/snapshot/", configureAuth)


            pom.project {
                name 'gradle-scalastyle'
                packaging 'jar'
                description 'gradle-scalastyle is a Gradle plugin for running the Scalastyle style checker'
                url 'https://github.com/MuhammadAshraf/gradle-scalastyle-plugin'

                scm {
                    url 'git@github.com:MuhammadAshraf/gradle-scalastyle-plugin.git'
                    connection 'git@github.com:MuhammadAshraf/gradle-scalastyle-plugin.git'
                    developerConnection 'git@github.com:MuhammadAshraf/gradle-scalastyle-plugin.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'MuhammadAshraf'
                        name 'Muhammad Ashraf'
                    }
                    developer {
                        id 'psfblair'
                        name 'Paul Blair'
                    }
                }
            }
        }
    }
}
